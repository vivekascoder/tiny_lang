---
source: src/tests/test_lexer.rs
expression: "Lexer::new(\"\", source).into_iter().collect::<Vec<Token>>()"
---
[
    Token {
        type_: KeywordFun,
        pos: (
            9,
            12,
        ),
        row: 2,
        col: 12,
    },
    Token {
        type_: Identifier(
            "calculate_something",
        ),
        pos: (
            13,
            32,
        ),
        row: 2,
        col: 32,
    },
    Token {
        type_: LParen,
        pos: (
            32,
            33,
        ),
        row: 2,
        col: 33,
    },
    Token {
        type_: Identifier(
            "a",
        ),
        pos: (
            33,
            34,
        ),
        row: 2,
        col: 34,
    },
    Token {
        type_: Colon,
        pos: (
            34,
            35,
        ),
        row: 2,
        col: 35,
    },
    Token {
        type_: KeywordUsize,
        pos: (
            36,
            41,
        ),
        row: 2,
        col: 41,
    },
    Token {
        type_: Comma,
        pos: (
            41,
            42,
        ),
        row: 2,
        col: 42,
    },
    Token {
        type_: Identifier(
            "b",
        ),
        pos: (
            43,
            44,
        ),
        row: 2,
        col: 44,
    },
    Token {
        type_: Colon,
        pos: (
            44,
            45,
        ),
        row: 2,
        col: 45,
    },
    Token {
        type_: KeywordUsize,
        pos: (
            46,
            51,
        ),
        row: 2,
        col: 51,
    },
    Token {
        type_: RParen,
        pos: (
            51,
            52,
        ),
        row: 2,
        col: 52,
    },
    Token {
        type_: SymbolReturn,
        pos: (
            53,
            55,
        ),
        row: 2,
        col: 55,
    },
    Token {
        type_: KeywordBool,
        pos: (
            56,
            60,
        ),
        row: 2,
        col: 60,
    },
    Token {
        type_: LBrace,
        pos: (
            61,
            62,
        ),
        row: 2,
        col: 62,
    },
    Token {
        type_: KeywordIf,
        pos: (
            75,
            77,
        ),
        row: 3,
        col: 15,
    },
    Token {
        type_: LParen,
        pos: (
            78,
            79,
        ),
        row: 3,
        col: 17,
    },
    Token {
        type_: Identifier(
            "a",
        ),
        pos: (
            79,
            80,
        ),
        row: 3,
        col: 18,
    },
    Token {
        type_: GreaterThan,
        pos: (
            81,
            82,
        ),
        row: 3,
        col: 20,
    },
    Token {
        type_: Identifier(
            "b",
        ),
        pos: (
            83,
            84,
        ),
        row: 3,
        col: 22,
    },
    Token {
        type_: RParen,
        pos: (
            84,
            85,
        ),
        row: 3,
        col: 23,
    },
    Token {
        type_: LBrace,
        pos: (
            86,
            87,
        ),
        row: 3,
        col: 25,
    },
    Token {
        type_: KeywordReturn,
        pos: (
            104,
            110,
        ),
        row: 4,
        col: 23,
    },
    Token {
        type_: Boolean(
            true,
        ),
        pos: (
            111,
            115,
        ),
        row: 4,
        col: 28,
    },
    Token {
        type_: SemiColon,
        pos: (
            115,
            116,
        ),
        row: 4,
        col: 29,
    },
    Token {
        type_: RBrace,
        pos: (
            129,
            130,
        ),
        row: 5,
        col: 14,
    },
    Token {
        type_: KeywordElse,
        pos: (
            131,
            135,
        ),
        row: 5,
        col: 19,
    },
    Token {
        type_: LBrace,
        pos: (
            136,
            137,
        ),
        row: 5,
        col: 21,
    },
    Token {
        type_: KeywordReturn,
        pos: (
            154,
            160,
        ),
        row: 6,
        col: 23,
    },
    Token {
        type_: Boolean(
            false,
        ),
        pos: (
            161,
            166,
        ),
        row: 6,
        col: 29,
    },
    Token {
        type_: SemiColon,
        pos: (
            166,
            167,
        ),
        row: 6,
        col: 30,
    },
    Token {
        type_: RBrace,
        pos: (
            180,
            181,
        ),
        row: 7,
        col: 14,
    },
    Token {
        type_: RBrace,
        pos: (
            190,
            191,
        ),
        row: 8,
        col: 10,
    },
]
